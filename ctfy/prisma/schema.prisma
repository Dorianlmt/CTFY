generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  isAdmin   Boolean  @default(false)
  teamId    String?
  team      Team?    @relation(fields: [teamId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  submissions Submission[]

  @@map("users")
}

model Team {
  id          String   @id @default(cuid())
  name        String   @unique
  joinCode    String   @unique
  description String?
  points      Int      @default(0)
  lastSolveAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  members User[]
  submissions Submission[]

  @@map("teams")
}

model Challenge {
  id          String   @id @default(cuid())
  title       String
  description String
  category    String
  difficulty  String
  points      Int
  flag        String
  fileUrl     String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  submissions Submission[]

  @@map("challenges")
}

model Submission {
  id          String    @id @default(cuid())
  flag        String
  isCorrect   Boolean
  submittedAt DateTime  @default(now())
  
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  teamId      String
  team        Team      @relation(fields: [teamId], references: [id])
  challengeId String
  challenge   Challenge @relation(fields: [challengeId], references: [id])

  @@unique([userId, challengeId])
  @@map("submissions")
}
